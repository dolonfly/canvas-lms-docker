ARG NODE_VERSION=18
ARG RUBY_VERSION=3.1
ARG CANVAS_HOME=/opt/canvas
ARG BUNDLER_VERSION=2.5.6

FROM node:${NODE_VERSION}-bookworm-slim AS node

FROM ruby:${RUBY_VERSION}-bookworm AS builder

ARG YARN_VERSION=1.22.19
ARG BUNDLER_VERSION
ARG CANVAS_HOME

ENV NODE_OPTIONS=--openssl-legacy-provider

COPY --from=node /usr/local/bin/node /usr/local/bin
COPY --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules

RUN <<EOF
ln -s /usr/local/bin/node /usr/local/bin/nodejs
ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm
ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx

apt-get update
apt-get install -y --no-install-recommends \
    libidn-dev \
    libxmlsec1-dev

npm update -g npm
npm install -g yarn@${YARN_VERSION}

git clone -b zut-202311 --depth 1 https://github.com/dolonfly/canvas-lms.git ${CANVAS_HOME}
EOF

WORKDIR ${CANVAS_HOME}

RUN <<EOF
yarn config set network-timeout 600000
yarn config set network-concurrency 1
yarn install # --pure-lockfile --ignore-optional

gem install bundler -v ${BUNDLER_VERSION} --no-document
gem install --default base64

bundle config set --local path vendor/bundle
bundle install
gem install --default base64

yarn gulp rev
#Generate Assets
mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss
touch Gemfile.lock
touch log/production.log
sudo chown -R canvasuser config/environment.rb log tmp public/assets \
                              app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
                              app/stylesheets/brandable_css_brands Gemfile.lock config.ru

#RAILS_ENV=production bundle exec rake canvas:compile_assets
RAILS_ENV=production bundle exec rails js:webpack_production
chown -R canvasuser public/dist/brandable_css

rm -rf \
    .git \
    .github \
    .storybook \
    .vscode \
    build \
    doc \
    docker-compose \
    hooks \
    inst-cli \
    jest \
    log/* \
    node_modules \
    tmp/* \
    ui \
    ui-build
rm \
    .codeclimate.yml \
    .dive-ci \
    .dockerignore \
    .editorconfig \
    .eslintignore \
    .eslintrc.js \
    .git-blame-ignore-revs \
    .gitignore \
    .gitmessage \
    .groovylintrc.json \
    .i18nignore \
    .i18nrc \
    .irbrc \
    .lintstagedrc.js \
    .npmrc \
    .nvmrc \
    .prettierrc \
    .rspec \
    .rubocop.yml \
    .sentryignore \
    .stylelintrc \
    .travis.yml \
    CONTRIBUTING.md \
    COPYRIGHT \
    Dockerfile* \
    Jenkinsfile* \
    LICENSE \
    README.md \
    SECURITY.md \
    bower.json \
    code_of_conduct.md \
    config/*.yml.* \
    docker-compose* \
    gulpfile.js \
    issue_template.md \
    jest.config.js \
    karma.conf.js \
    package.json \
    tsconfig.json \
    webpack.config.js \
    yarn.lock
EOF

COPY canvas ${CANVAS_HOME}

FROM ruby:${RUBY_VERSION}-bookworm AS runner

ARG CANVAS_HOME
ARG CANVAS_USER=canvas
ARG BUNDLER_VERSION

RUN <<EOF
gem install bundler -v ${BUNDLER_VERSION} --no-document
gem install --default base64

ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
echo 'Asia/Shanghai' >/etc/timezone

apt-get update
apt-get install -y --no-install-recommends \
    git \
    libbrotli1 \
    libidn12 \
    libpq5 \
    libsqlite3-0 \
    libxmlsec1-openssl

groupadd ${CANVAS_USER}
useradd -g ${CANVAS_USER} -d ${CANVAS_HOME} ${CANVAS_USER}
EOF

COPY --from=builder --chown=${CANVAS_USER} ${GEM_HOME} ${GEM_HOME}
COPY --from=builder --chown=${CANVAS_USER} ${CANVAS_HOME} ${CANVAS_HOME}

WORKDIR ${CANVAS_HOME}

RUN chmod +x /opt/canvas/script/canvas_init
RUN ln -s /opt/canvas/script/canvas_init /etc/init.d/canvas_init
RUN update-rc.d canvas_init defaults

# apache
RUN <<EOF
apt-get update
apt-get install -y apache2
apt-get install -y dirmngr gnupg apt-transport-https ca-certificates

curl https://oss-binaries.phusionpassenger.com/auto-software-signing-gpg-key.txt | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/phusion.gpg >/dev/null
# Add our APT repository
sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bookworm main > /etc/apt/sources.list.d/passenger.list'
apt-get update

# Install Passenger + Apache module
apt-get install -y libapache2-mod-passenger

a2enmod rewrite
a2enmod passenger
unlink /etc/apache2/sites-enabled/000-default.conf
EOF

ENV RUBYLIB ${CANVAS_HOME}
#USER ${CANVAS_USER}

EXPOSE 80 443

ADD ./apache/canvas.conf /etc/apache2/sites-enabled/canvas.conf

ADD ./canvas/script/start-prod.sh /opt/canvas/start.sh
ADD ./canvas/script/prod-db-initial.sh /opt/canvas/prod-db-initial.sh

ENTRYPOINT ["sh","/opt/canvas/start.sh"]