ARG CANVAS_USER=app
ARG CANVAS_HOME=/home/app/canvas

FROM phusion/passenger-customizable:3.0.2 as baseimg
RUN apt-get update && apt-get install -y libldap2-dev libidn11-dev libxmlsec1 ruby-dev zlib1g-dev build-essential libpq-dev libssl-dev redis-server libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev zlib1g-dev libxml2-dev libsqlite3-dev libpq-dev libxmlsec1-dev make g++ libxslt1-dev libcurl4-openssl-dev libffi-dev

RUN /pd_build/ruby-3.1.*.sh
RUN bash -lc 'rvm --default use ruby-3.1.4'
RUN gem update --system
RUN gem update

FROM baseimg as builderx
# Set correct environment variables.
ENV HOME /root

ARG CANVAS_USER
ARG CANVAS_HOME

RUN /pd_build/nodejs.sh 18

WORKDIR ${CANVAS_HOME}
RUN <<EOF
git clone -b canvas-self-customization --depth 1 https://github.com/dolonfly/canvas-lms.git ${CANVAS_HOME}

yarn config set network-timeout 600000
yarn config set network-concurrency 1
yarn install # --pure-lockfile --ignore-optional

bundle config set --local path vendor/bundle
bundle install

yarn gulp rev
#Generate Assets
mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss
touch Gemfile.lock
touch log/production.log
chown -R ${CANVAS_USER} config/environment.rb log tmp public/assets \
                              app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
                              app/stylesheets/brandable_css_brands Gemfile.lock config.ru

RAILS_ENV=production bundle exec rake canvas:compile_assets
RAILS_ENV=production bundle exec rails js:webpack_production
#chown -R ${CANVAS_USER} public/dist/brandable_css

rm -rf \
    .git \
    .github \
    .storybook \
    .vscode \
    build \
    doc \
    docker-compose \
    hooks \
    inst-cli \
    jest \
    log/* \
    node_modules \
    tmp/* \
    ui \
    ui-build
rm \
    .codeclimate.yml \
    .dive-ci \
    .dockerignore \
    .editorconfig \
    .eslintignore \
    .eslintrc.js \
    .git-blame-ignore-revs \
    .gitignore \
    .gitmessage \
    .groovylintrc.json \
    .i18nignore \
    .i18nrc \
    .irbrc \
    .lintstagedrc.js \
    .npmrc \
    .nvmrc \
    .prettierrc \
    .rspec \
    .rubocop.yml \
    .sentryignore \
    .stylelintrc \
    CONTRIBUTING.md \
    COPYRIGHT \
    Dockerfile* \
    Jenkinsfile* \
    LICENSE \
    README.md \
    SECURITY.md \
    bower.json \
    code_of_conduct.md \
    config/*.yml.* \
    docker-compose* \
    gulpfile.js \
    issue_template.md \
    jest.config.js \
    karma.conf.js \
    package.json \
    tsconfig.json \
    yarn.lock
EOF
COPY canvas ${CANVAS_HOME}

FROM baseimg as runnerx
# Set correct environment variables.
ENV HOME /root

ARG CANVAS_USER
ARG CANVAS_HOME

# Use baseimage-docker's init process.
CMD ["/sbin/my_init"]


WORKDIR ${CANVAS_HOME}

RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone

COPY --from=builderx --chown=${CANVAS_USER} ${CANVAS_HOME} ${CANVAS_HOME}
RUN chmod +x /home/app/canvas/script/canvas_init
RUN ln -s /home/app/canvas/script/canvas_init /etc/init.d/canvas_init
RUN update-rc.d canvas_init defaults

RUN mkdir -p /etc/my_init.d
RUN cp /home/app/canvas/script/canvas_init /etc/my_init.d/canvas_init
RUN chmod +x /etc/my_init.d/canvas_init

# Using Nginx and Passenger
RUN rm -f /etc/service/nginx/down
RUN rm /etc/nginx/sites-enabled/default
ADD nginx/canvas.conf /etc/nginx/sites-enabled/canvas.conf
ADD nginx/gzip_max.conf /etc/nginx/conf.d/gzip_max.conf

EXPOSE 80 443
