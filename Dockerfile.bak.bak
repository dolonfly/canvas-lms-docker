FROM ubuntu:latest
LABEL authors="dll"

ENV APP_HOME /usr/src/app/
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV RAILS_ENV production
WORKDIR $APP_HOME

RUN <<EOF
# aliyun
sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list &&\
    sed -i 's/# deb/deb/g' /etc/apt/sources.list  &&\
    apt-get clean && \
    apt-get update

apt-get update && apt-get install -y tzdata
ENV TZ=Asia/Shanghai
ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


# install ruby3.1
apt-get install -y git-core software-properties-common
add-apt-repository ppa:instructure/ruby && apt-get update && apt-get install -y ruby3.1 ruby3.1-dev zlib1g-dev libxml2-dev libsqlite3-dev postgresql libpq-dev libxmlsec1-dev libidn11-dev curl make g++

# install node 20.x
apt-get update && apt-get install -y ca-certificates curl gnupg && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    NODE_MAJOR=20 && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && apt-get install nodejs -y && \
    npm install -g corepack &&  corepack enable
EOF


# get canvas and install
RUN cd /tmp && git clone https://github.com/dolonfly/canvas-lms.git canvas
WORKDIR /tmp/canvas
RUN git branch --set-upstream-to origin/master
RUN git checkout zut-202311
RUN cp -ri /tmp/canvas/* $APP_HOME

WORKDIR $APP_HOME
RUN apt-get install libyaml-dev
# Bundler and Canvas dependencies
RUN gem install bundler --no-document -v 2.4.20 && \
    bundle config set --local path vendor/bundle && \
    bundle install

# Install NodeJS dependencies
RUN yarn install

# Automation jobs
RUN     ln -s ${APP_HOME}script/canvas_init /etc/init.d/canvas_init
RUN     update-rc.d canvas_init defaults

# copy config files
#RUN for config in amazon_s3 database \
#  delayed_jobs domain file_store outgoing_mail security external_migration; \
#  do cp config/$config.yml.example config/$config.yml; done
#RUN cp config/dynamic_settings.yml.example config/dynamic_settings.yml
#RUN cp config/database.yml.example config/database.yml
#copy config ${APP_HOME}config
RUN     mkdir -p log tmp/pids public/assets public/stylesheets/compiled
RUN     touch Gemfile.lock

# create canvas user
RUN     adduser --disabled-password --gecos canvas canvasuser
RUN     chown -R canvasuser config/environment.rb log tmp public/assets \
        public/stylesheets/compiled Gemfile.lock config.ru

# Generate Assets
RUN mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
RUN touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss
RUN touch Gemfile.lock
RUN touch log/production.log
RUN chown -R canvasuser config/environment.rb log tmp public/assets \
                              app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
                              app/stylesheets/brandable_css_brands Gemfile.lock config.ru
# RUN RAILS_ENV=production bundle exec rake canvas:compile_assets
RUN ./script/install_assets.sh
RUN chown -R canvasuser public/dist/brandable_css


ENTRYPOINT ["top", "-b"]